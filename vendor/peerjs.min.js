/* eslint-disable no-unused-vars, no-undef */
/* Minimaler PeerJS-Stub für lokale Entwicklung (Platzhalter)
   Dieser Stub stellt ein minimales `Peer`-Konstrukt bereit, damit die Anwendung
   nicht sofort beim Laden wegen fehlendem PeerJS abstürzt. Für produktive
   Nutzung bitte die echte peerjs-Bibliothek in /vendor/peerjs.min.js ablegen.
*/
(function(global){
  'use strict';
  if (!global) return;
  if (global.Peer) return;

  function Peer(id, options) {
    this.id = id || null;
    this.options = options || {};
  }

  Peer.prototype.connect = function(peerId) {
    // benutze peerId als No-op, damit Linter keine "unused parameter"-Warnung meldet
    void peerId;
    // minimale Verbindungsstruktur, damit der App-Code send/on aufrufen kann
    return {
      send: function() {},
      on: function() {}
    };
  };

  Peer.prototype.destroy = function() {};

  global.Peer = Peer;
})(typeof window !== 'undefined' ? window : {});
